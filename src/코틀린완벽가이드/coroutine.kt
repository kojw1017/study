fun main() {

}
/*
    1. 일시 중단 함수란 무엇인가, 일시 중단 함수의 동작과 일반적인 함수의 동작이 어떻게 다른가
    호출 지점을 일시 중단 시키는 함수, 일반 함수는 함수 실행이 끝나고 호출한 함수로 돌아간다

    2. launch()와 async() 빌더로 코루틴을 만드는 방법은 무엇인가?, launch()와 async()의 차이
    GlobalScope 객체를 사용해서 코루틴을 만든다
    작업이 끝난후 결과(반환값)를 만들어내냐 안만들어내냐의 차이
    결과 안만듬 - launch()
    결과 만듬  - async()
    await()메서드로 결과에 접근 가능
    계산이 완료되거나 취소될때까지 현재 코루틴 일시 중단

    3. runBlocking() 빌더의 목적을 설명하라
    트랙잭션같이 동작시키기 위해..?
    메인 스레드 안에서 여러개의 코루틴이 모두 실행되던지 모두 실행되지 않도록 하던지..?ㅅㅂ

    4. 구조적 동시성이란 무엇인가
    코루틴이 다른 코루틴 문맥에서 실행하면 자식 부모의 관계가 상대적으로 바뀔수 있다

    5. 동시성 잡의 생명 주기를 설명하라, 코루틴 트리에서 잡 취소가 어떻게 전파되는지 설명하라


    6. 코루틴 디스패치란 무엇인가, 코루틴 라이브러리가 제공하는 공통적인 디스패치 구현을 설명

    7. 코루틴 내부에서 디스패치를 바꾸는 방법은 무엇인가

    8. 코루틴 라이브러리가 사용하는 예외처리 메커니즘 설명 CoroutineExceptionHandler의 역할 설명

    9. 슈퍼바이저 잡이란 무엇인가, 내포된 코루틴에서 발생한 예외를 처리할 때 어떻게 슈퍼바이저 잡을 활용하나

    10. 채널이란 무엇인가, 코루틴 라이브러리가 지원하는 채널은 어떤 종류가 있나

    11. produce()함수를 사용해 채널을 만드는 방법은 무엇인가

    12. 티커 채널의 동작 설명

    13. 엑터 모델의 기본 개념을 설명, 액터를 코루틴 동시성 라이브러리에서 활용하는 방법

    14. 코틀린 표준 라이브러리가 제공하는 스레드 생성 유틸리티 함수 설명

    15. 코틀린 코드에서 스레드 간의 동기화 락을 어떻게 사용하는지 설명
 */